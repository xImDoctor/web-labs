@startuml class-diagram
  package decorators as decorators {
    class "UserDecorator" as decorators_UserDecorator {
      +user : 
      +__construct(user)
      +title()
      +body()
      +items()
      +bodyMd()
    }
    class "DecoratorFactory" as decorators_DecoratorFactory {
      {static} +create(class, model)
      {abstract} +title()
      {abstract} +body()
      {abstract} +items()
    }
    class "UsersDecorator" as decorators_UsersDecorator {
      +users : 
      +__construct(users)
      +title()
      +collection_render(call, separator)
      +body()
      +items()
      +bodyMd()
    }
  }
  package views as views {
    class "HtmlView" as views_HtmlView {
      #replacements : 
      +__construct(decorator)
      +render()
    }
    class "UsersMdView" as views_UsersMdView {
    }
    class "RssView" as views_RssView {
      #replacements : 
      +__construct(decorator)
      +render()
    }
    class "UserHtmlView" as views_UserHtmlView {
    }
    class "UsersHtmlView" as views_UsersHtmlView {
    }
    class "UsersRssView" as views_UsersRssView {
    }
    class "UserMdView" as views_UserMdView {
    }
    class "UserRssView" as views_UserRssView {
    }
    class "ViewFactory" as views_ViewFactory {
      {abstract} +render()
      {static} +create(type, class, decorator)
    }
    class "MdView" as views_MdView {
      #replacements : 
      +__construct(decorator)
      +render()
    }
  }
  package controllers as controllers {
    class "Router" as controllers_Router {
      +model : string
      +ext : ?string
      +id : ?int
      {static} +parse(path)
      -__construct(model, ext, id)
    }
    class "Controller" as controllers_Controller {
      +path : string
      +router : Router
      +model : object
      +__construct(path)
      +render()
    }
  }
  package models as models {
    class "User" as models_User {
      +email : string
      -password : string
      +first_name : ?string
      +last_name : ?string
      +__construct(email, password, first_name, last_name)
    }
    class "Users" as models_Users {
      +collection : 
      +users : ?array
      +__construct(users)
    }
  }
  controllers_Controller ..> controllers_Router
  controllers_Controller ..> decorators_DecoratorFactory
  controllers_Controller ..> views_ViewFactory
  controllers_Router ..> controllers_Router
  decorators_DecoratorFactory <|-- decorators_UserDecorator
  decorators_DecoratorFactory <|-- decorators_UsersDecorator
  decorators_UserDecorator ..> models_User
  decorators_UsersDecorator ..> decorators_UserDecorator
  decorators_UsersDecorator ..> models_Users
  models_Users ..> models_User
  views_HtmlView <|-- views_UserHtmlView
  views_HtmlView <|-- views_UsersHtmlView
  views_MdView <|-- views_UserMdView
  views_MdView <|-- views_UsersMdView
  views_RssView <|-- views_UserRssView
  views_RssView <|-- views_UsersRssView
  views_ViewFactory ..> decorators_DecoratorFactory
  views_ViewFactory ..> views_ViewFactory
  views_ViewFactory <|-- views_HtmlView
  views_ViewFactory <|-- views_MdView
  views_ViewFactory <|-- views_RssView
@enduml
